apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: {{ .Values.prometheus.image }}:{{ .Values.prometheus.tag }}
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: {{ .Values.grafana.image }}:{{ .Values.grafana.tag }}
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.grafana.adminUser }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword }}
          ports:
            - containerPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: snyk-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: snyk-exporter
  template:
    metadata:
      labels:
        app: snyk-exporter
    spec:
      containers:
        - name: snyk-exporter
          image: {{ .Values.snykExporter.image }}:{{ .Values.snykExporter.tag }}
          ports:
            - containerPort: 9469
          volumeMounts:
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: snyk-logs-pvc